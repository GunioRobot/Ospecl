#!/usr/bin/env ocaml

(**
 * Usage: $ ospecl module1_spec.ml module2_spec.ml ...
 * The arguments to ospecl should be source files which define a single value `specs : Spec.t list`.
 * The specs from each file will be executed in order and the overall results reported.
 *)

#use "topfind"
#require "unix"
#require "ospecl"

let specs_of_file filename =
  let dir = Filename.dirname filename in
  Topdirs.dir_directory dir;
  let used = Toploop.use_file Format.std_formatter filename in
  if used then
    Obj.obj (Toploop.getvalue "specs")
  else
    failwith ("Could not use file " ^ filename)

let _ =
  let files = ref [] in
  let include_dirs = ref [] in

  let append_to list_ref value =
    list_ref := !list_ref @ [value]
  in

  Arg.parse 
    [("-I", Arg.String (append_to include_dirs), "specify include directory")] 
    (append_to files)
    (Printf.sprintf "$ %s spec1.ml spec2.ml ...\n" Sys.argv.(0));

  List.iter Topdirs.dir_directory !include_dirs;
  let all_specs = List.concat (List.map specs_of_file !files) in
  Ospecl.Run.console all_specs
